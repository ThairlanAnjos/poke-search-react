{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","pokemon","setPokemon","pokemonData","setPokemonData","pokemonType","setPokemonType","getPokemon","a","toArray","url","axios","get","res","push","data","types","type","name","console","log","className","onSubmit","e","preventDefault","onChange","target","value","toLowerCase","placeholder","map","src","sprites","Math","round","height","weight","game_indices","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAqFeA,EA5EH,WAAO,IAAD,EACcC,mBAAS,WADvB,mBACTC,EADS,KACAC,EADA,OAEsBF,mBAAS,IAF/B,mBAETG,EAFS,KAEIC,EAFJ,OAGsBJ,mBAAS,IAH/B,mBAGTK,EAHS,KAGIC,EAHJ,KAKVC,EAAU,uCAAG,gCAAAC,EAAA,6DACXC,EAAU,GADC,SAGTC,EAHS,2CAGiCT,GAHjC,SAIGU,IAAMC,IAAIF,GAJb,OAITG,EAJS,OAKfJ,EAAQK,KAAKD,EAAIE,MACjBT,EAAeO,EAAIE,KAAKC,MAAM,GAAGC,KAAKC,MACtCd,EAAeK,GACfU,QAAQC,IAAIP,GARG,kDAUfM,QAAQC,IAAR,MAVe,0DAAH,qDAuBhB,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAMC,SAPW,SAACC,GACpBA,EAAEC,iBACFjB,KAKE,SACE,gCACC,uBACGU,KAAK,OACLQ,SAfW,SAACF,GACpBrB,EAAWqB,EAAEG,OAAOC,MAAMC,gBAelBC,YAAY,2BAIjB1B,EAAY2B,KAAI,SAACf,GAChB,OACE,sBAAKM,UAAU,YAAf,UACE,qBAAKU,IAAKhB,EAAKiB,QAAL,gBACV,qBAAKX,UAAU,WAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,kBACA,qBAAKA,UAAU,eAAf,SAA+BhB,OAEjC,sBAAKgB,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,oBACA,sBAAKA,UAAU,eAAf,UACG,IACAY,KAAKC,MAAoB,IAAdnB,EAAKoB,QAFnB,WAKF,sBAAKd,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,oBACA,sBAAKA,UAAU,eAAf,UACG,IACAY,KAAKC,MAAMnB,EAAKqB,OAAS,KAF5B,aAKF,sBAAKf,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,8BACA,qBAAKA,UAAU,eAAf,SAA+BN,EAAKsB,aAAaC,2BC9DpDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d81d6dd.chunk.js","sourcesContent":["//import logo from \"./logo.svg\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n//import { Button } from \"react-bootstrap\";\r\n//import HomePage from \"./pages/home\";\r\n//import { useEffect } from \"react\";\r\n\r\n\r\nconst App = () => {\r\n  const [pokemon, setPokemon] = useState(\"pikachu\");\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [pokemonType, setPokemonType] = useState(\"\");\r\n\r\n  const getPokemon = async () => {\r\n    const toArray = [];\r\n    try {\r\n      const url = `http://pokeapi.co/api/v2/pokemon/${pokemon}`;\r\n      const res = await axios.get(url);\r\n      toArray.push(res.data);\r\n      setPokemonType(res.data.types[0].type.name);\r\n      setPokemonData(toArray);\r\n      console.log(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPokemon(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getPokemon();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n         <input\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            placeholder=\"Enter Pokemon Name\"\r\n          />\r\n        </label>\r\n      </form>\r\n      {pokemonData.map((data) => {\r\n        return (\r\n          <div className=\"container\">\r\n            <img src={data.sprites[\"front_default\"]} />\r\n            <div className=\"divTable\">\r\n              <div className=\"divTableBody\">\r\n                <div className=\"divTableRow\">\r\n                  <div className=\"divTableCell\">Type</div>\r\n                  <div className=\"divTableCell\">{pokemonType}</div>\r\n                </div>\r\n                <div className=\"divTableRow\">\r\n                  <div className=\"divTableCell\">Height</div>\r\n                  <div className=\"divTableCell\">\r\n                    {\" \"}\r\n                    {Math.round(data.height * 3.9)} \"\r\n                  </div>\r\n                </div>\r\n                <div className=\"divTableRow\">\r\n                  <div className=\"divTableCell\">Weight</div>\r\n                  <div className=\"divTableCell\">\r\n                    {\" \"}\r\n                    {Math.round(data.weight / 4.3)} lbs\r\n                  </div>\r\n                </div>\r\n                <div className=\"divTableRow\">\r\n                  <div className=\"divTableCell\">Number of Battle</div>\r\n                  <div className=\"divTableCell\">{data.game_indices.length}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}